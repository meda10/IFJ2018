.IFJcode18
DEFVAR GF@$$input
DEFVAR GF@$$var_1
DEFVAR GF@$$var_2
DEFVAR GF@$$var_3
DEFVAR GF@$$var_4
DEFVAR GF@$$result
JUMP $$main

#SUBSTR
LABEL $$FUN_SUBSTR_START
PUSHFRAME
# Variable declare
DEFVAR LF@$$FUN_RET
MOVE LF@$$FUN_RET nil@nil
SUB LF@V_1 LF@V_1 int@1
SUB LF@V_2 LF@V_2 int@1
DEFVAR LF@$$pom
STRLEN LF@$$pom LF@V_0
JUMPIFEQ $LABEL_EQUAL LF@$$pom int@0
DEFVAR LF@$$pom_1
LT LF@$$pom_1 LF@V_1 int@0
JUMPIFEQ $LABEL_EQUAL LF@$$pom_1 bool@true
LABEL $LABEL_A
CREATEFRAME
DEFVAR TF@$$pom_2
DEFVAR TF@$$pom_3
GETCHAR TF@$$pom_3 LF@V_0 LF@V_1
ADD LF@V_1 LF@V_1 int@1
CONCAT LF@$$FUN_RET LF@$$FUN_RET TF@$$pom_3
JUMPIFEQ $LABEL_EQUAL LF@V_2 int@0
SUB LF@V_2 LF@V_2 int@1
LT TF@$$pom_2 LF@V_1 LF@$$pom
JUMPIFEQ $LABEL_A TF@$$pom_2 bool@true
LABEL $LABEL_EQUAL
POPFRAME
RETURN

#ORD
LABEL $$FUN_ORD_START
PUSHFRAME
# Variable declare
DEFVAR LF@$$FUN_RET
MOVE LF@$$FUN_RET nil@nil
STRLEN LF@$$FUN_RET LF@V_0
GT GF@$$var_1 LF@V_1 LF@$$FUN_RET
LT GF@$$var_2 LF@V_1 int@1
JUMPIFEQ $$FUN_ORD_FAIL GF@$$var_1 bool@true
JUMPIFEQ $$FUN_ORD_FAIL GF@$$var_2 bool@true
LABEL $$FUN_ORD_OK
SUB LF@V_1 LF@V_1 int@1
STRI2INT LF@$$FUN_RET LF@V_0 LF@V_1
LABEL $$FUN_ORD_END
POPFRAME
RETURN
LABEL $$FUN_ORD_FAIL
MOVE LF@$$FUN_RET nil@nil
JUMP $$FUN_ORD_END

#LENGTH
LABEL $$FUN_LENGTH_START
PUSHFRAME
# Variable declare
DEFVAR LF@$$FUN_RET
MOVE LF@$$FUN_RET nil@nil
TYPE GF@$$var_1 LF@V_0
JUMPIFEQ $$FUN_LENGTH_B GF@$$var_1 string@string
JUMPIFEQ $$FUN_LENGTH_B GF@$$var_1 string@int
JUMPIFEQ $$FUN_LENGTH_B GF@$$var_1 string@float
JUMPIFEQ $$FUN_LENGTH_FAIL LF@V_0 nil@nil
LABEL $$FUN_LENGTH_B
STRLEN LF@$$FUN_RET LF@V_0
JUMP $$FUN_LENGTH_END
LABEL $$FUN_LENGTH_FAIL
MOVE LF@$$FUN_RET int@0
LABEL $$FUN_LENGTH_END
POPFRAME
RETURN

#INPUTF
LABEL $$FUN_INPUTF_START
PUSHFRAME
# Variable declare
DEFVAR LF@$$FUN_RET
MOVE LF@$$FUN_RET nil@nil
READ LF@$$FUN_RET float
JUMPIFEQ $$FUN_INPUTF_FAIL LF@$$FUN_RET float@0x0p+0
JUMP $$FUN_INPUTF_END
LABEL $$FUN_INPUTF_FAIL
MOVE LF@$$FUN_RET float@0x0p+0
JUMP $$FUN_INPUTF_END
LABEL $$FUN_INPUTF_END
POPFRAME
RETURN

#INPUTI
LABEL $$FUN_INPUTI_START
PUSHFRAME
# Variable declare
DEFVAR LF@$$FUN_RET
MOVE LF@$$FUN_RET nil@nil
READ LF@$$FUN_RET int
JUMPIFEQ $$FUN_INPUTI_FAIL LF@$$FUN_RET int@0
JUMP $$FUN_INPUTI_END
LABEL $$FUN_INPUTI_FAIL
MOVE LF@$$FUN_RET int@0
JUMP $$FUN_INPUTI_END
LABEL $$FUN_INPUTI_END
POPFRAME
RETURN

#INPUTS
LABEL $$FUN_INPUTS_START
PUSHFRAME
# Variable declare
DEFVAR LF@$$FUN_RET
MOVE LF@$$FUN_RET nil@nil
READ LF@$$FUN_RET string
TYPE GF@$$var_1 LF@$$FUN_RET
JUMPIFEQ $$FUN_INPUTS_END GF@$$var_1 string@string
JUMPIFEQ $$FUN_INPUTS_FAIL LF@$$FUN_RET nil@nil
JUMP $$FUN_INPUTS_END
LABEL $$FUN_INPUTS_FAIL
MOVE LF@$$FUN_RET nil@nil
JUMP $$FUN_INPUTS_END
LABEL $$FUN_INPUTS_END
POPFRAME
RETURN

#PRINT
LABEL $$FUN_print_START
PUSHFRAME
# Variable declare
DEFVAR LF@$$FUN_RET
MOVE LF@$$FUN_RET nil@nil
WRITE LF@V_0
JUMP $$FUN_PRINT_END
LABEL $$FUN_PRINT_END
POPFRAME
RETURN

#CHR
LABEL $$FUN_CHR_START
PUSHFRAME
# Variable declare
DEFVAR LF@$$FUN_RET
MOVE LF@$$FUN_RET nil@nil
DEFVAR LF@RAN
LT LF@RAN LF@V_0 int@0
JUMPIFEQ $$FUN_CHR_RETURN LF@RAN bool@true
GT LF@RAN LF@V_0 int@255
JUMPIFEQ $$FUN_CHR_RETURN LF@RAN bool@true
INT2CHAR LF@$$FUN_RET LF@V_0
LABEL $$FUN_CHR_END
POPFRAME
RETURN

# Main
LABEL $$main
CREATEFRAME
PUSHFRAME
CREATEFRAME
DEFVAR TF@V_0
MOVE TF@V_0 int@5
CALL $$FUN_print_START
CREATEFRAME
DEFVAR TF@V_0
MOVE TF@V_0 int@6
CALL $$FUN_print_START
CREATEFRAME
DEFVAR TF@V_0
MOVE TF@V_0 int@7
CALL $$FUN_print_START
CREATEFRAME

#Main end
CLEARS
